  
  D:\Workspace\SI\RT_CUDA\RT_CUDA>"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin\nvcc.exe" -ccbin "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX86\x64" -x cu  -I"D:\Logiciels\SDL2-2.0.9\include" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include"  -G   --keep-dir x64\Debug -maxrregcount=0  --machine 64 --compile   -g   -DWIN32 -DWIN64 -D_DEBUG -D_CONSOLE -D_MBCS -Xcompiler "/EHsc /W3 /nologo /Od  /FS /Zi /RTC1 /MDd " -o x64\Debug\kernel.cu.obj "D:\Workspace\SI\RT_CUDA\RT_CUDA\kernel.cu" -clean 
  kernel.cu
  Compiling CUDA source file kernel.cu...
  
  D:\Workspace\SI\RT_CUDA\RT_CUDA>"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin\nvcc.exe" -gencode=arch=compute_35,code=\"sm_35,compute_35\" --use-local-env -ccbin "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\HostX86\x64" -x cu  -I"D:\Logiciels\SDL2-2.0.9\include" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include"  -G   --keep-dir x64\Debug -maxrregcount=0  --machine 64 --compile -cudart static  -g   -DWIN32 -DWIN64 -D_DEBUG -D_CONSOLE -D_MBCS -Xcompiler "/EHsc /W3 /nologo /Od /Fdx64\Debug\vc141.pdb /FS /Zi /RTC1 /MDd " -o x64\Debug\kernel.cu.obj "D:\Workspace\SI\RT_CUDA\RT_CUDA\kernel.cu" 
d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(424): warning : template parameter "T" may not be used in an elaborated type specifier
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(577): warning : statement is unreachable
d:\workspace\si\rt_cuda\rt_cuda\raytriangleintersection.cuh(71): warning : calling a constexpr __host__ function("epsilon") from a __host__ __device__ function("update") is not allowed. The experimental flag '--expt-relaxed-constexpr' can be used to allow this.
d:\workspace\si\rt_cuda\rt_cuda\raytriangleintersection.cuh(79): warning : calling a constexpr __host__ function("epsilon") from a __host__ __device__ function("update") is not allowed. The experimental flag '--expt-relaxed-constexpr' can be used to allow this.
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(256): warning : variable "to_view" was declared but never referenced
d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(424): warning : template parameter "T" may not be used in an elaborated type specifier
d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(426): warning : template parameter "T" may not be used in an elaborated type specifier
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(577): warning : statement is unreachable
  kernel.cu
d:\workspace\si\rt_cuda\rt_cuda\visualizer.cuh(97): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(436): warning C4267: 'initializing': conversion from 'size_t' to 'unsigned int', possible loss of data
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(436): warning C4267: 'initializing': conversion from 'size_t' to 'const unsigned int', possible loss of data
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(549): warning C4305: '=': truncation from 'double' to 'float'
D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(554): warning C4305: '=': truncation from 'double' to 'float'
d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(440): warning C4305: 'return': truncation from 'double' to 'doble'
          with
          [
              doble=float
          ]
  d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(462): note: see reference to function template instantiation 'doble math::my_atan<T>(doble,doble)' being compiled
          with
          [
              doble=float,
              T=float
          ]
  D:/Workspace/SI/RT_CUDA/RT_CUDA/kernel.cu(482): note: see reference to function template instantiation 'math::Vector<3,float> math::spherical_coordianates<float>(const math::Vector<3,float> &)' being compiled
d:\workspace\si\rt_cuda\rt_cuda\vector.cuh(446): warning C4305: '-=': truncation from 'double' to 'doble'
          with
          [
              doble=float
          ]
     Creating library D:\Workspace\SI\RT_CUDA\x64\Debug\RT_CUDA.lib and object D:\Workspace\SI\RT_CUDA\x64\Debug\RT_CUDA.exp
  RT_CUDA.vcxproj -> D:\Workspace\SI\RT_CUDA\x64\Debug\RT_CUDA.exe
